---
- name: "firewalld █ Add services to firewall's {{ dhcp_server_firewall_zone | default('public',true) }} zone"
  firewalld:
    zone: "{{ dhcp_server_firewall_zone | default('public') }}"
    service: "{{ item }}"
    immediate: "yes"
    permanent: "yes"
    state: enabled
  when:
    - ansible_facts.os_family == "RedHat"
    - ep_firewall | default(false) | bool
  loop: "{{ j2_role_variables['firewall_services_to_add'] }}"
  tags:
    - firewall

- name: "package █ Install {{ j2_role_variables['packages_to_install'] | join(' ') }}"
  package:
    name: "{{ j2_role_variables['packages_to_install'] }}"
    state: present
  tags:
    - package

- name: template █ Generate /etc/dhcp/dhcpd.conf
  template:
    src: dhcpd.conf.j2
    dest: /etc/dhcp/dhcpd.conf
    owner: root
    group: root
    mode: 0644
  notify: service █ Restart dhcp server
  tags:
    - template

- name: template █ Generate /etc/dhcp/dhcpd.networks.conf
  template:
    src: dhcpd.networks.conf.j2
    dest: /etc/dhcp/dhcpd.networks.conf
    owner: root
    group: root
    mode: 0644
  notify: service █ Restart dhcp server
  tags:
    - template

- name: "template █ Generate /etc/dhcp/dhcpd.{{ item }}.conf"
  template:
    src: dhcpd.subnet.conf.j2
    dest: "/etc/dhcp/dhcpd.{{ item }}.conf"
    owner: root
    group: root
    mode: 0644
  with_items: "{{ networks }}"
  when:
    - j2_current_iceberg_network in item
    - networks[item].is_in_dhcp
  notify: service █ Restart dhcp server
  tags:
    - template

- meta: flush_handlers

- name: "service █ Manage {{ j2_role_variables['services_to_start'] | join(' ') }} state"
  service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  loop: "{{ j2_role_variables['services_to_start'] }}"
  tags:
    - service
