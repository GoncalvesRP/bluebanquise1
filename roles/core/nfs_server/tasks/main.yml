---
- name: "firewalld █ Add services to firewall's {{ nfs_server_firewall_zone | default('public',true) }} zone"
  firewalld:
    zone: "{{ nfs_server_firewall_zone | default('public',true) }}"
    service: "{{ item }}"
    immediate: "yes"
    permanent: "yes"
    state: enabled
  when:
    - ansible_facts.os_family == "RedHat"
    - ep_firewall | default(false) | bool
  loop: "{{ j2_role_variables['firewall_services_to_add'] }}"
  tags:
    - firewall

- name: "package █ Install {{ j2_role_variables['packages_to_install'] | join(' ') }}"
  package:
    name: "{{ j2_role_variables['packages_to_install'] }}"
    state: present
  tags:
    - package

- name: lineinfile █ Edit file /etc/exports to add exported FS
  lineinfile:
    path: /etc/exports
    regexp: ' # export name: {{ item }}$'
    line: "{{ nfs[item]['export'] }} {{ networks[nfs[item]['take_over_network']]['subnet'] }}/{{ networks[nfs[item]['take_over_network']]['prefix'] }}({{ nfs[item]['export_arguments'] }}) # export name: {{ item }}"
  when: inventory_hostname == nfs[item]['server']
  with_items: "{{ nfs }}"
  notify: service █ Restart nfs server services
  tags:
    - template

- meta: flush_handlers

- name: "service █ Manage {{ j2_role_variables['services_to_start'] | join(' ') }} state"
  service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  loop: "{{ j2_role_variables['services_to_start'] }}"
  tags:
    - service
