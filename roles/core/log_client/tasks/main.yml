---
- name: "package █ Install {{ j2_role_variables['packages_to_install'] | join(' ') }}"
  package:
    name: "{{ j2_role_variables['packages_to_install'] }}"
    state: present
  tags:
    - package

- name: "template █ Generate {{ log_client_rsyslog_conf_path }}"
  template:
    src: rsyslog.conf.j2
    dest: "{{ log_client_rsyslog_conf_path }}"
    owner: root
    group: root
    mode: 0644
  notify: Restart rsyslog services
  when: "'rsyslog.conf' not in (log_client_configuration_files | default([]) | selectattr('name','defined') | map(attribute='name') | list)"
  tags:
    - template

- name: "template █ Generate custom rsyslog files"
  template:
    src: rsyslog.d_custom.conf.j2
    dest: "{{ item.path | default('/etc/rsyslog.d') }}/{{ item.name }}"
    owner: root
    group: root
    mode: 0644
  loop: "{{ log_client_configuration_files }}"
  loop_control:
    label: "Install configuration file {{ item.name }}"
  notify: Restart rsyslog services
  when: log_client_configuration_files is defined and log_client_configuration_files is iterable
  tags:
    - template

- name: seport █ Allow syslog port into SELinux
  seport:
    ports: "{{ log_client_server_port }}"
    proto: "{{ item }}"
    setype: syslogd_port_t
    state: present
  when:
    - ansible_facts.os_family == "RedHat"
    - ansible_facts.selinux.status == "enabled"
  loop:
    - tcp
    - udp
  notify: Restart rsyslog services

- meta: flush_handlers

- name: "service █ Manage {{ j2_role_variables['services_to_start'] | join(' ') }} state"
  service:
    name: "{{ item }}"
    enabled: "{{ (enable_services | bool) | ternary('yes','no') }}"
    state: "{{ (start_services | bool) | ternary('started', omit) }}"
  loop: "{{ j2_role_variables['services_to_start'] }}"
  tags:
    - service
